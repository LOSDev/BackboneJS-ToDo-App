// Generated by CoffeeScript 1.7.1
(function() {
  var TodoApp,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  TodoApp = {
    Collections: {},
    Controllers: {},
    Models: {},
    Views: {},
    init: function() {
      return new TodoApp.Controllers.TodoController();
    }
  };

  TodoApp.Collections.TodoCollection = (function(_super) {
    __extends(TodoCollection, _super);

    function TodoCollection() {
      return TodoCollection.__super__.constructor.apply(this, arguments);
    }

    TodoCollection.prototype.model = TodoApp.Models.Todo;

    TodoCollection.prototype.localStorage = new Store('TodoApp');

    TodoCollection.prototype.done = function() {
      return this.filter(function(todo) {
        return todo.get('done');
      });
    };

    TodoCollection.prototype.remaining = function() {
      return this.without.apply(this, this.done());
    };

    return TodoCollection;

  })(Backbone.Collection);

  TodoApp.Controllers.TodoController = (function(_super) {
    __extends(TodoController, _super);

    function TodoController() {
      return TodoController.__super__.constructor.apply(this, arguments);
    }

    TodoController.prototype.initialize = function() {
      return Backbone.history.start();
    };

    TodoController.prototype.routes = {
      '': 'index'
    };

    TodoController.prototype.index = function() {
      var todoListView, todoStatsView, todoView, todos;
      todos = new TodoApp.Collections.TodoCollection();
      todos.model = TodoApp.Models.Todo;
      todos.fetch();
      todoListView = new TodoApp.Views.TodoListView({
        todos: todos
      });
      todoStatsView = new TodoApp.Views.TodoStatsView({
        todos: todos
      });
      todoView = new TodoApp.Views.TodoView({
        todos: todos,
        todoListView: todoListView,
        todoStatsView: todoStatsView
      });
      return todoView.render();
    };

    return TodoController;

  })(Backbone.Router);

  TodoApp.Models.Todo = (function(_super) {
    __extends(Todo, _super);

    function Todo() {
      return Todo.__super__.constructor.apply(this, arguments);
    }

    Todo.prototype.defaults = {
      'done': false,
      'title': null
    };

    Todo.prototype.toggleStatus = function() {
      return this.save({
        done: !this.get('done')
      });
    };

    return Todo;

  })(Backbone.Model);

  TodoApp.Views.TodoListItemView = (function(_super) {
    __extends(TodoListItemView, _super);

    function TodoListItemView() {
      return TodoListItemView.__super__.constructor.apply(this, arguments);
    }

    TodoListItemView.prototype.tagName = 'li';

    TodoListItemView.prototype.className = "list-group-item list-group-item-info";

    TodoListItemView.prototype.initialize = function(args) {
      this.todo = args.todo;
      this.todo.bind('change', this.render, this);
      return this.todo.bind('destroy', this.remove, this);
    };

    TodoListItemView.prototype.render = function() {
      var checkedHtmlAttribute, divClass;
      checkedHtmlAttribute = '';
      divClass = '';
      if (this.todo.get('done')) {
        checkedHtmlAttribute = ' checked="checked"';
        divClass = ' class="done"';
      }
      this.$el.html('<button type="button" class="close delete badge" aria-hidden="true" title="Aufgabe lÃ¶schen">&times;</button>' + '<input class="toggleStatus" type="checkbox"' + checkedHtmlAttribute + ' /> ' + '<span class="title" contenteditable="true">' + this.todo.get('title') + '</span>');
      return this;
    };

    TodoListItemView.prototype.remove = function() {
      return this.$el.remove();
    };

    TodoListItemView.prototype.events = {
      'click .toggleStatus': 'toggleStatus',
      'click .delete': 'destroy',
      'blur .title': 'changeTitle'
    };

    TodoListItemView.prototype.toggleStatus = function() {
      return this.todo.toggleStatus();
    };

    TodoListItemView.prototype.destroy = function() {
      this.todo.destroy();
      return false;
    };

    TodoListItemView.prototype.changeTitle = function() {
      if ((this.$('.title').html() !== this.todo.get('title')) && this.$('.title').html()) {
        this.todo.set({
          title: this.$('.title').html()
        });
        return this.todo.save();
      }
    };

    return TodoListItemView;

  })(Backbone.View);

  TodoApp.Views.TodoListView = (function(_super) {
    __extends(TodoListView, _super);

    function TodoListView() {
      return TodoListView.__super__.constructor.apply(this, arguments);
    }

    TodoListView.prototype.el = '#todoList';

    TodoListView.prototype.initialize = function(args) {
      return this.todos = args.todos;
    };

    TodoListView.prototype.render = function() {
      return this.todos.each((function(_this) {
        return function(todo) {
          var todoListItemView;
          todoListItemView = new TodoApp.Views.TodoListItemView({
            todo: todo
          });
          return _this.$el.append(todoListItemView.render().el);
        };
      })(this));
    };

    TodoListView.prototype.addItem = function(todo) {
      var todoListItemView;
      todoListItemView = new TodoApp.Views.TodoListItemView({
        todo: todo
      });
      return this.$el.append(todoListItemView.render().el);
    };

    return TodoListView;

  })(Backbone.View);

  TodoApp.Views.TodoStatsView = (function(_super) {
    __extends(TodoStatsView, _super);

    function TodoStatsView() {
      return TodoStatsView.__super__.constructor.apply(this, arguments);
    }

    TodoStatsView.prototype.el = '#todoStats';

    TodoStatsView.prototype.initialize = function(args) {
      return this.todos = args.todos;
    };

    TodoStatsView.prototype.render = function() {
      var doneTasks, percentage, tasks;
      tasks = this.todos.length;
      doneTasks = this.todos.done().length;
      percentage = Math.round(doneTasks / tasks * 100);
      return this.$el.html('Alle: ' + this.todos.length + '  -  ' + 'Erledigt: ' + this.todos.done().length + '  -  ' + 'Verbleibend: ' + this.todos.remaining().length + '<br><br><div class="progress">' + '<div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: ' + percentage + '%;">' + percentage + '%</div></div>');
    };

    return TodoStatsView;

  })(Backbone.View);

  TodoApp.Views.TodoView = (function(_super) {
    __extends(TodoView, _super);

    function TodoView() {
      return TodoView.__super__.constructor.apply(this, arguments);
    }

    TodoView.prototype.el = '#todoWrap';

    TodoView.prototype.events = {
      'keypress #createItemInput': 'createItem',
      'click #createTask': 'createItem'
    };

    TodoView.prototype.initialize = function(args) {
      this.todos = args.todos;
      this.todoListView = args.todoListView;
      this.todoStatsView = args.todoStatsView;
      this.createItemInput = $('#createItemInput');
      this.todos.bind('add', this.todoListView.addItem, this.todoListView);
      this.todos.bind('change', this.todoStatsView.render, this.todoStatsView);
      return this.todos.bind('destroy', this.todoStatsView.render, this.todoStatsView);
    };

    TodoView.prototype.render = function() {
      this.todoListView.render();
      return this.todoStatsView.render();
    };

    TodoView.prototype.createItem = function(event) {
      console.log(event);
      if ((event.keyCode === 13 || event.type === 'click') && this.createItemInput.val()) {
        this.todos.create({
          title: this.createItemInput.val()
        });
        return this.todoStatsView.render();
      }
    };

    return TodoView;

  })(Backbone.View);

  jQuery(function() {
    return TodoApp.init();
  });

}).call(this);
